name: Build GUI App

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        target:
          - arch: arm64
            os: mac
            runner: macos-latest
            build-type-file: zip
          - arch: intel
            os: mac
            runner: macos-13
            build-type-file: zip
          - arch: x64
            os: linux
            runner: ubuntu-latest
            build-type-file: AppImage
          - arch: x64
            os: win
            runner: windows-latest
            build-type-file: zip
        node-version: [20]
    runs-on: ${{ matrix.target.runner }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Install Snapcraft on Ubuntu
        if: runner.os == 'Linux' && matrix.target.runner == 'ubuntu-latest'
        run: |
          sudo snap install snapcraft --classic

      - name: Compile code
        run: npx electron-builder --${{ matrix.target.os }} --publish never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List files in dist
        run: ls -l dist/

      - name: Remove extended attributes on macOS
        if: runner.os == 'macOS'
        run: xattr -rd com.apple.quarantine *.app

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Release-${{ github.ref_name }}-App-${{ matrix.target.os }}_${{ matrix.target.arch }}
          path: dist/**/*.${{ matrix.target.build-type-file }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*.${{ matrix.target.build-type-file }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}